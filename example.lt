@plugin demo.js

@set width 80
@set align center

@begin underline
The LowTeX Manual
@end underline

By Hardmath123

@vspace

@set indent on
@set align left

LowTeX--pronounced "low-tech"--is a small text transformation package that generates pretty monospace outputs, specifically for READMEs, licenses, or even large block comments. This documentation was generated by LowTeX, and its source is bundled with the package. We will walk through the basics of LowTeX here. The source for this tutorial is in `example.lt`.

@vspace

@set indent off
@begin underline
Getting started
@end underline
@set indent on

@begin twocols

Install LowTeX with `npm install -g lowtex`. Create a new document in your favorite text editor, preferably set to a mode that wraps lines of text. To compile, use the `lowtex` command.

@vspace

A LowTeX document consists of text, with interspersed **directives**, which are prefixed with an `@`. A directive is either a **setting**, a **block**, or a **command**. Text is processed line-by-line, being wrapped and aligned according to the settings. A blank line (or directive) indicates the end of a paragraph. A line prefixed with `#` is a comment and is skipped silently.

@vspace

A setting is declared with the line `@set <name> <value>`. LowTeX mantains an internal stack of settings. To restore a setting to its previous value, use `@unset <name>`.

A block is declared with the line `@begin <name> <arguments>`, and terminated with the line `@end`. Blocks transform the text inside them. An example of a block is the **underline** block, which underlines the text inside it.

A command is simply `@<name> <arguments>`. For example, **@vspace n** adds `n` blank lines.

@end twocols

@vspace

@set indent off
@begin underline-all
The Plugin System
@end underline-all
@set indent on
You might notice that this underline looks different from the other ones you've seen thus far. That's because it's created using a special underlining plugin. Plugins allow developers to define their own custom commands and blocks via the use of node modules. Information on how to write plugins will be available on the Github project wiki. To include a plugin, just put the module's .js file in the working directory when you run lowtex, or add it to node through the node package manager, and then put `@plugin <plugin-name>` in your .lt file before you use the plugin's features.

@vspace

@set indent off
@begin underline-all
Plugins Can Also:
@end underline-all
@set indent on

@vspace

@set indent off
Reverse text:

@vspace
@set align center
@begin reverse
Hello World!
@end reverse
@set align left

@vspace

Add horizontal lines:

@vspace

@horizontal-line

@vspace

The plugin used in this file can be found in demo.js, and contains the commands and filters: `@underline-all <padding>`, '@<begin/end> reverse', `@horizontal-line <length>'.




