                               The LowTeX Manual                                
                               --- ------ ------                                
                                 By Hardmath123                                 
                                                                                
   LowTeX--pronounced "low-tech"--is a small text transformation package that   
generates pretty monospace outputs, specifically for READMEs, licenses, or even 
large block comments. This documentation was generated by LowTeX, and its       
source is bundled with the package. We will walk through the basics of LowTeX   
here. The source for this tutorial is in `example.lt`.                          
                                                                                
                                   Philosophy                                   
                                   ----------                                   
                                Monospace is nice.                              
                             Everything is scriptable.                          
                                 Readable sources.                              
                                                                                
                                 Make it a filter.                              
                          Write small, powerful modules.                        
                                Format haikus well.                             
                                                                                
Getting started                                                                 
------- -------                                                                 
   Install LowTeX with `npm install -g                                          
lowtex`. Create a new document in your      A setting is declared with the line 
favorite text editor, preferably set     `@set <name> <value>`. LowTeX mantains 
to a mode that wraps lines of text. To   an internal stack of settings. To      
compile, use the `lowtex` command.       restore a setting to its previous      
                                         value, use `@unset <name>`.            
   A LowTeX document consists of text,      A block is declared with the line   
with interspersed DIRECTIVES, which      `@begin <name> <arguments>`, and       
are prefixed with an `@`. A directive    terminated with the line `@end`.       
is either a SETTING, a BLOCK, or a       Blocks transform the text inside them. 
COMMAND. Text is processed               An example of a block is the UNDERLINE 
line-by-line, being wrapped and          block, which underlines the text       
aligned according to the settings. A     inside it.                             
blank line (or directive) indicates         A command is simply `@<name>        
the end of a paragraph. A line           <arguments>`. For example, @VSPACE N   
prefixed with `#` is a comment and is    adds `n` blank lines.                  
skipped silently.                                                               
                                                                                
Modules                                                                         
-------                                                                         
   NOTE: LowTeX is now INCOMPATIBLE with the old module system implemented by   
@sl.                                                                            
   LowTeX is highly configurable. You can (and should!) write your own modules  
for your documents. Modules are nodejs-style. Your module exports a function,   
which accepts a converter instance as an argument, and modifies it somehow.     
   Modules are imported using the `@require <path>` syntax, where the path is   
relative to the current working directory.                                      
                                                                                
    module.exports = function(converter) {
      converter.commands.banana = function() {
        this.feedLines(["Banana" + this.nspace(this.get("width") - 6)]);
      };
    };
                                                                                
   Converters expose the @ syntax with methods such as set(name, value),        
get(name), unset(name), begin_filter(name, args), and end_filter().             
